pipeline {
    agent any
   
    environment {
        // This can work with nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "localhost:8081/Nexus"
        // Nexus repository where we will upload the artifact
        NEXUS_REPOSITORY = "Releases"
        // Jenkins credential id to authenticate to Nexus
        NEXUS_CREDENTIAL_ID = "admin:admin123"
        //DockerHub credential
        registry = "tarekbettaieb/timecheetci-cd10"
        registryCredential = 'docker123'
        dockerImage = ''
    }
    stages {

        stage("clone repo") {
            steps {
                script {
                    // Let's clone the source
                    git 'https://gitlab.com/tarek10/timesheetci.git';
                }
            }
        }

        stage("mvn build") {
            steps {
                script {
                    // Since we are using Windows we should Use "bat" step
                    // this step takes code and package it in its distributable format, such as a JAR
                    bat "mvn package -DskipTests=true"
                }
            }
        }

        stage("mvn clean") {
            steps {
                script {
                    //this step attempts to clean the files and directories generated by Maven during its build
                    bat "mvn clean"
                }
            }
        }

        stage("Test stage") {
            steps {
                script {
                    // this step runs our JUnit tests through Maven
                    bat "mvn test"
                }
            }
        }

  	    stage("Sonar metrics") {
            steps {
                script {
                    // this step enable to execute the SonarQube analysis via a regular Maven goal
                    bat "mvn sonar:sonar "
                     }
                }
            } 
           
        stage("Deployment stage") {
            steps {
                script {
                    // this stage deploys the artifact into Nexus repository
                    bat "mvn deploy"
                }
            }
        }
          
        stage('Building docker image') {
          steps{
               script {
                 // this step build docker image 
                 docker.build registry + ":$BUILD_NUMBER"
                }
         }    
        }
       stage('Deploy Image to Dockerhub') {
         steps{
           script {
                 // this step push the docker image builded to dockerhub
                 docker.withRegistry( '', registryCredential ) {	
	         bat "docker push $registry:$BUILD_NUMBER"
                 }
          }
        }
      }

        stage('Remove Unused docker image') {
          steps{
                // this step delete the image to cleanup your server space after build and deploy
	        bat "docker rmi $registry:$BUILD_NUMBER"
            }
        }
         
        stage("Email Notification") {
          steps {
            // this step notifies collaborators about the build status 
            mail bcc: '', body: '''Hello User the build of your project successed.
             Jenkins.''', cc: '', from: '', replyTo: '', subject: 'Build succed', to: 'iheb.benalaya@esprit.tn,tarek.bettaieb@esprit.tn'
          }      
        }
    }
}